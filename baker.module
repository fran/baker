<?php
// $Id: baker.module,v 0.9 Fri Nov 13 10:53:29 CET 2009,  fran Exp $



/**
 * hook_menu. 
 * Define adminstration pages
 *
 * @return $items: array with pages
 * @author fran
 **/

function baker_menu()
{
  $items = array();

  $items['admin/build/baker'] = array(
    'title' => 'Baker administration',
    'type' => MENU_CALLBACK,
    'page callback' => 'baker_administration_page',
    'access callback' => 'user_access',
    'access arguments' => array('administer baker'),
    'file' => 'baker.admin.inc');
    
  $items['admin/build/baker/add'] = array(
    'title' => 'Baker add new title',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('baker_admin_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer baker'),
    'file' => 'baker.admin.inc');

  $items['admin/build/baker/edit/%'] = array(
      'title' => 'Baker adit title',
      'type' => MENU_CALLBACK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('baker_admin_form'),
      'access callback' => 'user_access',
      'access arguments' => array('administer baker'),
      'file' => 'baker.admin.inc');
      
    $items['admin/build/baker/delete/%'] = array(
        'title' => 'Baker adit title',
        'type' => MENU_CALLBACK,
        'page callback' => '_baker_delete_item',
        'access callback' => 'user_access',
        'access arguments' => array('administer baker'),
        'file' => 'baker.admin.inc');
  return $items;
}



/**
 * Define access permisions
 *
 * @return void
 * @author fran
 **/
function baker_perm(){
 return array('administer baker', 'administer baker parameters for breadcrumbs');
}

/**
 * hook_nodeapi.
 * this function set the drupal breadcrumbs. Its call other functions
 * to generate the crumbs that will be displayed.
 * 
 * @return void 
 * @author fran
 * @var $variables: all page's variables
  **/
function baker_preprocess_page(&$variables){
    $breadcrumb =  _baker_create_breadcrumb($variables);
    if($breadcrumb){
      $variables['breadcrumb'] = $breadcrumb;
    }
}

/**
 * Gets URL and explode the path to generate the breadcrumb
 *
 * @return $breadcrumb
 * @author fran
 **/
function _baker_create_breadcrumb($variables)
{
  $url = _baker_get_url();
  $crumbs = _baker_generate_crumbs($url);
  


  $breadcrumb =  '<div class="breadcrumb">'. implode(' Â» ', $crumbs) .'</div>';
  return $breadcrumb;
}

/**
 * Gets the actual url
 *
 * @return $url : string with the actual url
 * @author fran 
 **/
 
function _baker_get_url()
{
  global $base_path;
  if(isset($_GET['q'])){
    $url =url($_GET['q']);
    //remove base_path;
    if($base_path != '/'){
      $url = str_replace($base_path, '', $url);
    }
    return $url;
  }
}

/**
 * Generate the links with its titles.
 *
 * @return $crumbs : array with the links thats will generate the finally breadcrumbs
 * @author fran
 **/
function _baker_generate_crumbs($url)
{
  // Load actual base url
  global $base_url;
  $crumbs[] = l(t('Home'), "<front>");
  $url_items = explode('/',$url);
  $last_item = count($url_items) -1;
  $last_url='';
  $path_length = count($key);
  foreach($url_items as $key => $item ){
    if($item != ''){
      // The first item don't the slash because $base_url got it. Its avoid this cases www.pepito.com//blog
      if($key != 0){
        $last_url .= '/';
      }
      // check the last item. It must not be a link.
      if($key == $last_item){
        $crumb =  urldecode($item); 
      }else{
        $crumb = l(urldecode($item), $base_url . $last_url . $item);
      }
      $crumbs[] = $crumb;
      $last_url .=  $item;
    }
  }
  return $crumbs;
}

/**
 * This function generate the title of the crumb for the url.
 * The title could be customized  througth the baker administration by the user.
 *
 * @return $title
 * @author fran
 **/
function _baker_generate_title($last_url, $item)
{
  //TODO: 
}